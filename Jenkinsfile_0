pipeline {
    agent any
    options {
        // This is required if you want to clean before build
        skipDefaultCheckout(true)
    }
    stages {
        
        
        stage('cloning') {
            steps {
            cleanWs()
                // We need to explicitly checkout from SCM here
                checkout scm
                echo "Building ${env.JOB_NAME}..."
                sh 'git clone https://github.com/khouloudRb/Movies_App.git'
            }
        }
        
         stage('Build and Run') {
            parallel {
                stage('install front dependencies') {
                    steps {
                        dir('./Movies_APP/frontend') {
                        sh 'npm install'
                        }
                    }
                }
                
                stage('install back dependencies') {
                    steps {
                        dir('./Movies_APP') {
                        sh 'npm install'
                        }
                    }
                }
            }
            steps {
                sh 'npm run dev&'
                sh 'sleep 30'
            }
        }
        
        stage('Unit tests') {
            steps {
                dir('./Movies_APP/frontend') {
                    sh 'npm test&'
                }
            }
        }
        
        stage('Code quality inspection'){
            steps {
                build job: 'Sonarqube'
            }
        }
        
        stage('Katalon tests') {
            tools {
                jdk 'jdk8'
            }
            steps {
                build job: 'katalon2'
            }
        }
        
    
    }
     post {
            always {
                 emailext body: '''$DEFAULT_CONTENT''',
                 recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']],
                 subject: '''$DEFAULT_SUBJECT'''
            }
     }
}
